class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        if(head==NULL) return NULL;
        ListNode*slow=head,*fast=head,*entry=head;   //MATHS APPROCH

        while(fast->next!=NULL && fast->next->next!=NULL){
            slow=slow->next;
            fast=fast->next->next;

            if(slow==fast){   // LOOP EXIST
                while(entry!=slow){
                     slow=slow->next;
                     entry=entry->next;
                }
                return slow;
            }

        }
        return NULL;
        
    }
};
